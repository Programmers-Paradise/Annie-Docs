name: Sync Documentation from Annie Repository

on:
  # Trigger on push to main branch of this repo
  push:
    branches: [main]

  # Trigger via webhook from Annie repository
  repository_dispatch:
    types: [docs-update]

  # Allow manual triggering
  workflow_dispatch:
    inputs:
      force_sync:
        description: "Force sync all documentation"
        required: false
        default: "false"

  # Scheduled sync every 6 hours
  schedule:
    - cron: "0 */6 * * *"

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  sync-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Annie-Docs repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Annie main repository
        uses: actions/checkout@v4
        with:
          repository: Programmers-Paradise/Annie
          path: annie-source
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Sync API documentation
        run: |
          # Create sync script for API docs
          python scripts/sync-api-docs.py

      - name: Sync examples
        run: |
          # Copy examples from main repository
          if [ -d "annie-source/examples" ]; then
            cp -r annie-source/examples/* docs/examples/ 2>/dev/null || true
          fi

      - name: Sync README and guides
        run: |
          # Update main documentation with latest from Annie repo
          if [ -f "annie-source/README.md" ]; then
            # Extract relevant sections for docs
            python scripts/sync-readme-content.py
          fi    - name: Update version information
      run: |
        # Extract version from Annie repository
        if [ -f "annie-source/Cargo.toml" ]; then
          VERSION=$(grep '^version' annie-source/Cargo.toml | head -1 | cut -d'"' -f2)
          echo "ANNIE_VERSION=$VERSION" >> $GITHUB_ENV
          python scripts/update-version-info.py "$VERSION"
        fi

      - name: Build documentation
        run: |
          mkdocs build --clean

      - name: Check for changes
        id: changes
        run: |
          git add .
          if git diff --staged --quiet; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "docs: sync from Annie repository [automated]"
          git push

      - name: Deploy to GitHub Pages
        if: steps.changes.outputs.has_changes == 'true'
        uses: actions/deploy-pages@v2
        with:
          path: ./site
